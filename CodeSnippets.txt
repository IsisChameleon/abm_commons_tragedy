https://stackoverflow.com/questions/26664985/netlogo-finding-out-all-turtles-linked-to-each-other-and-assigning-them-to-a-gr

Out-link-neighbors

 link-neighbors




 https://stackoverflow.com/questions/27488185/netlogo-flocking-to-others-in-agentset-as-opposed-to-all-turtles?rq=1

 https://stackoverflow.com/questions/47877069/adding-agentset-from-different-agents-togother-into-a-let
 
 https://stackoverflow.com/questions/8425518/netlogo-two-agentsets-operations


https://stackoverflow.com/questions/45249528/how-do-i-plot-a-sorted-array-in-netlogo
 to plotByOrder
  clear-plot
  let pts sort [point] of turtles
  foreach pts [[pt] -> plot pt]
end

https://stackoverflow.com/questions/49813349/using-lists-vs-agentsets


    you use lists for an ordered collection of agents and sets for an unordered collection. I feel there is more to it though.
Ordered vs. unordered is an important difference, but there is another crucial one: lists can contain duplicate items, agentsets cannot.
    I do not know how to properly implement an equivalent to filter or map using ask.

You don't need to implement those: they already exist!

The agentset version of filter is with:

my-agent-set with [ color = red ]

is the same as:

filter [ a -> [ color = red ] of a ] my-agent-list

The agentset version of map is of:

[ color ] of my-agent-set

is the same as:

map [ a -> [ color ] of a ] my-agent-list

And, as you may have intuited by now, ask is the equivalent of foreach.
Grasping these similarities is an important step towards NetLogo enlightenment. (Or even general programming enlightenment.)
The idea of unifying (or somehow generalizing) the syntax and primitives for these two types of collection has been discussed before (e.g., here and here), but that kind of big language change tends not to happen very often.





set-current-plot-pen penname


new_df.loc['a', ('data1', 'two')]


https://www.frontiersin.org/articles/10.3389/fevo.2018.00237/full




